import BarcodeGenerator from "./barcode-generator"
import FrequencySpectrumGenerator from "./frequency-spectrum-generator"
import NoiseFieldGenerator from "./noise-field-generator"
import PixelatedNoiseGenerator from "./pixelated-noise-generator"
import BrownianMotionGenerator from "./brownian-motion-generator"
import TrigonometricCircleGenerator from "./trigonometric-circle-generator"
import ParticleSystemGenerator from "./particle-system-generator"
import CellularAutomatonGenerator from "./cellular-automaton-generator"
import FourPoleGradientGenerator from "./four-pole-gradient-generator"
import QuadtreePattern from "./quadtree-pattern"
import type { PatternGenerator } from "./types"

export const patternGenerators: PatternGenerator[] = [
  {
    id: "barcode",
    name: "Barcode Scanner",
    component: BarcodeGenerator,
    technology: 'CANVAS_2D',
    controls: [
      {
        id: "scrollSpeed",
        label: "Scroll Speed",
        type: "range",
        min: 0.5,
        max: 8.0,
        step: 0.5,
        defaultValue: 2,
      },
      {
        id: "barDensity",
        label: "Bar Density",
        type: "range",
        min: 0.2,
        max: 0.9,
        step: 0.1,
        defaultValue: 0.6,
      },
      {
        id: "scannerSpeed",
        label: "Scanner Speed",
        type: "range",
        min: 0.5,
        max: 5.0,
        step: 0.5,
        defaultValue: 2,
      },
      {
        id: "scannerOpacity",
        label: "Scanner Opacity",
        type: "range",
        min: 0.1,
        max: 1.0,
        step: 0.1,
        defaultValue: 0.6,
      },
      {
        id: "colorScheme",
        label: "Color Scheme",
        type: "select",
        defaultValue: "classic",
        options: [
          { value: "classic", label: "CLASSIC" },
          { value: "inverted", label: "INVERTED" },
          { value: "blue", label: "BLUE_TONE" },
          { value: "green", label: "GREEN_TONE" },
          { value: "amber", label: "AMBER_TONE" },
        ],
      },
      {
        id: "showScanner",
        label: "Show Scanner",
        type: "checkbox",
        defaultValue: true,
      },
    ],
  },
  {
    id: "frequency",
    name: "Frequency Spectrum",
    component: FrequencySpectrumGenerator,
    technology: 'CANVAS_2D',
    controls: [
      {
        id: "barWidth",
        label: "Bar Width",
        type: "range",
        min: 1,
        max: 8,
        step: 1,
        defaultValue: 3,
      },
      {
        id: "updateSpeed",
        label: "Update Speed",
        type: "range",
        min: 10,
        max: 200,
        step: 10,
        defaultValue: 50,
      },
      {
        id: "intensity",
        label: "Intensity",
        type: "range",
        min: 0.2,
        max: 2.0,
        step: 0.1,
        defaultValue: 1.0,
      },
      {
        id: "bassBoost",
        label: "Bass Boost",
        type: "range",
        min: 0.1,
        max: 1.0,
        step: 0.1,
        defaultValue: 0.7,
      },
      {
        id: "colorScheme",
        label: "Color Scheme",
        type: "select",
        defaultValue: "green",
        options: [
          { value: "green", label: "GREEN_SPECTRUM" },
          { value: "blue", label: "BLUE_SPECTRUM" },
          { value: "purple", label: "PURPLE_SPECTRUM" },
          { value: "rainbow", label: "RAINBOW_SPECTRUM" },
          { value: "amber", label: "AMBER_SPECTRUM" },
        ],
      },
      {
        id: "glow",
        label: "Glow Effects",
        type: "checkbox",
        defaultValue: true,
      },
    ],
  },
  {
    id: "noise",
    name: "Noise Field",
    component: NoiseFieldGenerator,
    technology: 'CANVAS_2D',
    controls: [
      {
        id: "noiseScale",
        label: "Noise Scale",
        type: "range",
        min: 0.005,
        max: 0.1,
        step: 0.005,
        defaultValue: 0.02,
      },
      {
        id: "animationSpeed",
        label: "Animation Speed",
        type: "range",
        min: 0.001,
        max: 0.05,
        step: 0.001,
        defaultValue: 0.01,
      },
      {
        id: "contrast",
        label: "Contrast",
        type: "range",
        min: 0.5,
        max: 3.0,
        step: 0.1,
        defaultValue: 1.0,
      },
      {
        id: "brightness",
        label: "Brightness",
        type: "range",
        min: 0.5,
        max: 2.0,
        step: 0.1,
        defaultValue: 1.0,
      },
      {
        id: "colorMode",
        label: "Color Mode",
        type: "select",
        defaultValue: "blue",
        options: [
          { value: "blue", label: "BLUE_FIELD" },
          { value: "plasma", label: "PLASMA_FIELD" },
          { value: "fire", label: "FIRE_FIELD" },
          { value: "ice", label: "ICE_FIELD" },
          { value: "electric", label: "ELECTRIC_FIELD" },
        ],
      },
    ],
  },
  {
    id: "pixelated-noise",
    name: "Pixelated Noise",
    component: PixelatedNoiseGenerator,
    technology: 'CANVAS_2D',
    controls: [
      {
        id: "pixelSize",
        label: "Pixel Size",
        type: "range",
        min: 2,
        max: 32,
        step: 1,
        defaultValue: 8,
      },
      {
        id: "noiseScale",
        label: "Noise Scale",
        type: "range",
        min: 0.01,
        max: 0.5,
        step: 0.01,
        defaultValue: 0.1,
      },
      {
        id: "animationSpeed",
        label: "Animation Speed",
        type: "range",
        min: 0.001,
        max: 0.1,
        step: 0.001,
        defaultValue: 0.02,
      },
      {
        id: "colorIntensity",
        label: "Color Intensity",
        type: "range",
        min: 0.1,
        max: 2.0,
        step: 0.1,
        defaultValue: 1.0,
      },
      {
        id: "colorScheme",
        label: "Color Scheme",
        type: "select",
        defaultValue: "retro",
        options: [
          { value: "retro", label: "RETRO_PALETTE" },
          { value: "monochrome", label: "MONOCHROME" },
          { value: "cyan", label: "CYAN_MATRIX" },
          { value: "amber", label: "AMBER_TERMINAL" },
        ],
      },
    ],
  },
  {
    id: "brownian-motion",
    name: "Brownian Motion",
    component: BrownianMotionGenerator,
    technology: 'WEBGL_2.0',
    controls: [
      {
        id: "particleCount",
        label: "Particle Count",
        type: "range",
        min: 1,
        max: 20,
        step: 1,
        defaultValue: 12,
      },
      {
        id: "speed",
        label: "Speed",
        type: "range",
        min: 0.1,
        max: 3.0,
        step: 0.1,
        defaultValue: 1.0,
      },
      {
        id: "brightness",
        label: "Brightness",
        type: "range",
        min: 0.5,
        max: 5.0,
        step: 0.1,
        defaultValue: 2.0,
      },
      {
        id: "trailLength",
        label: "Trail Length",
        type: "range",
        min: 2,
        max: 15,
        step: 1,
        defaultValue: 8,
      },
      {
        id: "jitterAmount",
        label: "Brownian Jitter",
        type: "range",
        min: 0.01,
        max: 0.2,
        step: 0.01,
        defaultValue: 0.05,
      },
    ],
  },
  {
    id: "trigonometric-circle",
    name: "Trigonometric Circle",
    component: TrigonometricCircleGenerator,
    technology: 'CANVAS_2D',
    controls: [
      {
        id: "speed",
        label: "Animation Speed",
        type: "range",
        min: 0.1,
        max: 3.0,
        step: 0.1,
        defaultValue: 1.0,
      },
    ],
  },
  {
    id: "particle-system",
    name: "Advanced Particle System",
    component: ParticleSystemGenerator,
    technology: 'WEBGL_2.0',
    controls: [
      {
        id: "particleCount",
        label: "Particle Count",
        type: "range",
        min: 1,
        max: 100,
        step: 1,
        defaultValue: 50,
      },
      {
        id: "lifeExpectancy",
        label: "Life Expectancy",
        type: "range",
        min: 1.0,
        max: 10.0,
        step: 0.5,
        defaultValue: 5.0,
      },
      {
        id: "lifeVariation",
        label: "Life Variation",
        type: "range",
        min: 0,
        max: 100,
        step: 5,
        defaultValue: 50,
      },
      {
        id: "particleSize",
        label: "Particle Size",
        type: "range",
        min: 1,
        max: 20,
        step: 1,
        defaultValue: 8,
      },
      {
        id: "spawnRate",
        label: "Spawn Rate",
        type: "range",
        min: 1,
        max: 50,
        step: 1,
        defaultValue: 25,
      },
      {
        id: "movementSpeed",
        label: "Movement Speed",
        type: "range",
        min: 0.1,
        max: 5.0,
        step: 0.1,
        defaultValue: 1.0,
      },
      {
        id: "curlStrength",
        label: "Curl Strength",
        type: "range",
        min: 0.0,
        max: 2.0,
        step: 0.1,
        defaultValue: 1.0,
      },
      {
        id: "gravity",
        label: "Gravity",
        type: "range",
        min: -2.0,
        max: 2.0,
        step: 0.1,
        defaultValue: 0.0,
      },
      {
        id: "brightness",
        label: "Brightness",
        type: "range",
        min: 0.5,
        max: 8.0,
        step: 0.5,
        defaultValue: 3.0,
      },
      {
        id: "enableTrails",
        label: "Enable Trails",
        type: "checkbox",
        defaultValue: true,
      },
      {
        id: "trailDecay",
        label: "Trail Decay",
        type: "range",
        min: 0.8,
        max: 0.99,
        step: 0.01,
        defaultValue: 0.95,
      },
      {
        id: "trailQuality",
        label: "Trail Quality",
        type: "select",
        defaultValue: "medium",
        options: [
          { value: "low", label: "LOW_PERF" },
          { value: "medium", label: "MEDIUM_PERF" },
          { value: "high", label: "HIGH_PERF" },
        ],
      },
      {
        id: "colorPalette",
        label: "Color Palette",
        type: "select",
        defaultValue: "classic",
        options: [
          { value: "classic", label: "CLASSIC_YELLOW" },
          { value: "fire", label: "FIRE_GRADIENT" },
          { value: "plasma", label: "PLASMA_SPECTRUM" },
          { value: "ice", label: "ICE_CRYSTAL" },
          { value: "electric", label: "ELECTRIC_CYAN" },
        ],
      },
      {
        id: "reset",
        label: "Reset Simulation",
        type: "button",
        defaultValue: false,
      },
    ],
  },
  {
    id: "cellular-automaton",
    name: "1D CELLULAR AUTOMATA",
    component: CellularAutomatonGenerator,
    technology: 'CANVAS_2D',
    controls: [
      {
        id: "rulePrev",
        label: "← PREV",
        type: "button",
        defaultValue: false,
      },
      {
        id: "ruleNext",
        label: "NEXT →",
        type: "button",
        defaultValue: false,
      },
      {
        id: "cellSize",
        label: "Cell Size",
        type: "range",
        min: 1,
        max: 8,
        step: 1,
        defaultValue: 2,
      },
      {
        id: "animationSpeed",
        label: "Generation Speed",
        type: "range",
        min: 0.02,
        max: 0.5,
        step: 0.02,
        defaultValue: 0.30,
      },
      {
        id: "initialCondition",
        label: "Initial Condition",
        type: "select",
        defaultValue: "center",
        options: [
          { value: "single", label: "SINGLE_LEFT" },
          { value: "center", label: "SINGLE_CENTER" },
          { value: "random", label: "RANDOM_SEED" },
        ],
      },
      {
        id: "resetTrigger",
        label: "Reset Automaton",
        type: "button",
        defaultValue: false,
      },
    ],
  },
  {
    id: "four-pole-gradient",
    name: "4-Pole Gradient",
    component: FourPoleGradientGenerator,
    technology: 'CANVAS_2D',
    controls: [
      {
        id: "pole1Color",
        label: "Pole 1 Color",
        type: "color",
        defaultValue: "#FF0000",
      },
      {
        id: "pole2Color",
        label: "Pole 2 Color", 
        type: "color",
        defaultValue: "#00FF00",
      },
      {
        id: "pole3Color",
        label: "Pole 3 Color",
        type: "color",
        defaultValue: "#0000FF",
      },
      {
        id: "pole4Color",
        label: "Pole 4 Color",
        type: "color",
        defaultValue: "#FFFF00",
      },
      {
        id: "interpolationPower",
        label: "Interpolation Power",
        type: "range",
        min: 0.5,
        max: 4.0,
        step: 0.1,
        defaultValue: 2.0,
      },
      {
        id: "animationEnabled",
        label: "Animation Enabled",
        type: "checkbox",
        defaultValue: false,
      },
      {
        id: "animationSpeed",
        label: "Animation Speed",
        type: "range",
        min: 0.1,
        max: 3.0,
        step: 0.1,
        defaultValue: 1.0,
      },
      {
        id: "animationPattern",
        label: "Animation Pattern",
        type: "select",
        defaultValue: "circular",
        options: [
          { value: "circular", label: "CIRCULAR_ORBIT" },
          { value: "figure8", label: "FIGURE_8_PATH" },
          { value: "oscillating", label: "OSCILLATING_WAVE" },
          { value: "random", label: "RANDOM_WALK" },
          { value: "curl", label: "CURL_NOISE_FIELD" },
        ],
      },
      {
        id: "noiseEnabled",
        label: "Noise Overlay",
        type: "checkbox",
        defaultValue: false,
      },
      {
        id: "noiseIntensity",
        label: "Noise Intensity",
        type: "range",
        min: 0.0,
        max: 1.0,
        step: 0.05,
        defaultValue: 0.3,
      },
      {
        id: "noiseScale",
        label: "Noise Scale",
        type: "range",
        min: 0.005,
        max: 0.1,
        step: 0.005,
        defaultValue: 0.02,
      },
      {
        id: "noiseType",
        label: "Noise Type",
        type: "select",
        defaultValue: "analog",
        options: [
          { value: "analog", label: "ANALOG_GRAIN" },
          { value: "digital", label: "DIGITAL_STATIC" },
          { value: "film", label: "FILM_GRAIN" },
        ],
      },
      {
        id: "showPoles",
        label: "Show Pole Indicators",
        type: "checkbox",
        defaultValue: true,
      },
    ],
  },
  {
    id: "quadtree",
    name: "Quadtree Structure",
    component: QuadtreePattern,
    technology: 'CANVAS_2D',
    controls: [
      {
        id: "maxDepth",
        label: "RECURSION DEPTH",
        type: "range",
        min: 1,
        max: 6,
        step: 1,
        defaultValue: 4,
      },
      {
        id: "subdivisionPattern",
        label: "SUBDIVISION PATTERN",
        type: "select",
        defaultValue: "golden",
        options: [
          { value: "uniform", label: "UNIFORM GRID" },
          { value: "golden", label: "GOLDEN SPIRAL" },
          { value: "checkerboard", label: "CHECKERBOARD" },
          { value: "spiral", label: "FIBONACCI SPIRAL" },
          { value: "center", label: "CENTER FOCUS" },
        ],
      },
      {
        id: "coloringRule",
        label: "COLOR STYLE",
        type: "select",
        defaultValue: "depth",
        options: [
          { value: "depth", label: "BY DEPTH" },
          { value: "grayscale", label: "GRAYSCALE" },
          { value: "circles", label: "HALF CIRCLES" },
        ],
      },
    ],
  },
]

export { BarcodeGenerator, FrequencySpectrumGenerator, NoiseFieldGenerator, PixelatedNoiseGenerator, BrownianMotionGenerator, TrigonometricCircleGenerator, ParticleSystemGenerator, CellularAutomatonGenerator, FourPoleGradientGenerator, QuadtreePattern }
export type { PatternGenerator, PatternGeneratorProps } from "./types"
